{"version":3,"file":"src_screens_SignInScreen_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/Background.tsx","webpack:///./src/components/Button.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/Logo.tsx","webpack:///./src/components/TextInput.tsx","webpack:///./src/contexts/AuthContext.ts","webpack:///./src/core/theme.tsx","webpack:///./src/core/utils.tsx","webpack:///./src/screens/SignInScreen.tsx","webpack:///./src/services/AuthService.ts"],"sourcesContent":["import React, { memo } from 'react';\nimport {\n  StyleSheet,\n  KeyboardAvoidingView,\n  View\n} from 'react-native';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Background = ({ children }: Props) => (\n  <View\n    style={styles.background}\n  >\n    <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\n      {children}\n    </KeyboardAvoidingView>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    width: '100%',\n    backgroundColor: '#fff'\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    width: '100%',\n    maxWidth: 340,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default memo(Background);","import React, { memo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button as PaperButton } from 'react-native-paper';\nimport { theme } from '../core/theme';\n\ntype Props = React.ComponentProps<typeof PaperButton>;\n\nconst Button = ({ mode, style, children, ...props }: Props) => (\n  <PaperButton\n    style={[\n      styles.button,\n      mode === 'outlined' && { backgroundColor: theme.colors.surface },\n      style,\n    ]}\n    labelStyle={styles.text}\n    mode={mode}\n    {...props}\n  >\n    {children}\n  </PaperButton>\n);\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    marginVertical: 10,\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    lineHeight: 26,\n  },\n});\n\nexport default memo(Button);","import React, { memo } from 'react';\nimport { StyleSheet, Text } from 'react-native';\nimport { theme } from '../core/theme';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Header = ({ children }: Props) => (\n  <Text style={styles.header}>{children}</Text>\n);\n\nconst styles = StyleSheet.create({\n  header: {\n    fontSize: 26,\n    color: theme.colors.primary,\n    fontWeight: 'bold',\n    paddingVertical: 14,\n  },\n});\n\nexport default memo(Header);","import React, { memo } from 'react';\nimport { Image, StyleSheet } from 'react-native';\n\nconst Logo = () => (\n  <Image\n       source={{ uri: 'https://i.pinimg.com/originals/85/ad/a1/85ada1467cbaaf05b183050451a8e353.png' }}\n        style={styles.image}\n      />\n);\n\nconst styles = StyleSheet.create({\n  image: {\n    width: '100%',\n    top: -60,\n    height: 200,\n    resizeMode: 'contain',\n  },\n});\n\nexport default memo(Logo);","import React, { memo } from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { TextInput as Input } from 'react-native-paper';\nimport { theme } from '../core/theme';\n\ntype Props = React.ComponentProps<typeof Input> & { errorText?: string };\n\nconst TextInput = ({ errorText, ...props }: Props) => (\n  <View style={styles.container}>\n    <Input\n      style={styles.input}\n      selectionColor={theme.colors.primary}\n      underlineColor=\"transparent\"\n      mode=\"outlined\"\n      {...props}\n    />\n    {errorText ? <Text style={styles.error}>{errorText}</Text> : null}\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    marginVertical: 12,\n  },\n  input: {\n    backgroundColor: theme.colors.surface,\n  },\n  error: {\n    fontSize: 14,\n    color: theme.colors.error,\n    paddingHorizontal: 4,\n    paddingTop: 4,\n  },\n});\n\nexport default memo(TextInput);","import React from 'react';\n\nconst AuthContext = React.createContext({\n  signIn: (buyerPhone: string, password: string) => {},\n  signOut: () => {},\n  signUp: (buyerPhone: string, password: string) => {},\n});\n\nconst useAuth = () => React.useContext(AuthContext);\n\nexport {useAuth, AuthContext};","import { DefaultTheme } from 'react-native-paper';\n\nexport const theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#600EE6',\n    secondary: '#414757',\n    error: '#f13a59',\n  },\n};","export const emailValidator = (email: string) => {\n  const re = /\\S+@\\S+\\.\\S+/;\n\n  if (!email || email.length <= 0) return 'Email cannot be empty.';\n  if (!re.test(email)) return 'Ooops! We need a valid email address.';\n\n  return '';\n};\n\nexport const passwordValidator = (password: string) => {\n  if (!password || password.length <= 0) return 'Password cannot be empty.';\n\n  return '';\n};\n\nexport const nameValidator = (name: string) => {\n  if (!name || name.length <= 0) return 'Name cannot be empty.';\n\n  return '';\n};\n\nexport const phoneNumberValidator = (phoneNumber: string) => {\n  const re = /^\\+84\\d{9}$/;\n\n  if (!phoneNumber || phoneNumber.replace(/\\D/g, '').length <= 0) {\n    return 'Phone number cannot be empty.';\n  }\n  if (!re.test(phoneNumber)) {\n    return 'Please enter a valid phone number with a country code, starting with \\'+84\\'.';\n  }\n\n  return '';\n};\n\n","import React, { memo, useState } from 'react';\nimport { TouchableOpacity, StyleSheet, Text, View, Alert } from 'react-native';\nimport Background from '../components/Background';\nimport Logo from '../components/Logo';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\nimport TextInput from '../components/TextInput';\nimport { theme } from '../core/theme';\nimport { passwordValidator, phoneNumberValidator } from '../core/utils';\nimport { Navigation } from '../types';\nimport AuthService from '../services/AuthService';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Snackbar } from 'react-native-paper';\n\ntype Props = {\n  navigation: Navigation;\n};\n\nconst SignInScreen = ({ navigation }: Props) => {\n  const [buyerPhone, setBuyerPhone] = useState({ value: '+84', error: '' });\n  const [password, setPassword] = useState({ value: '', error: '' });\n  const [visibleSnackbar, setVisibleSnackbar] = useState(false);\n  const [loginError, setLoginError] = useState('');\n\n  const showSnackbar = () => {\n    setVisibleSnackbar(true);\n  };\n\n  const { signIn } = useAuth();\n\n  const handleLogin = async () => {\n    const passwordError = passwordValidator(password.value);\n    const buyerPhoneError = phoneNumberValidator(buyerPhone.value);\n\n    if (buyerPhoneError || passwordError) {\n      setLoginError('Invalid phone number or password');\n      showSnackbar();\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('buyerPhone', buyerPhone.value);\n    formData.append('password', password.value);\n\n    try {\n      const response = await fetch('http://149.28.134.133/api/v1/account/login-by-phone', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n        body: formData,\n      });\n\n      if (response.status === 200) {\n        const responseData = await response.json();\n        // Save the token using AuthService\n        await AuthService.shared.setCredentials(responseData.result.account.token);\n        // Save the user info using AuthService\n        await AuthService.shared.setUserInfo(responseData.result.account);\n        // Sign in\n        signIn(buyerPhone.value, password.value);\n        // Show success message\n        setLoginError('Login successful!');\n        showSnackbar();\n      } else if (response.status === 401) {\n        setLoginError('Invalid phone number or password');\n        showSnackbar();\n      } else {\n        console.error('Login error:', response.status);\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n\n  return (\n    <Background>\n      <Logo />\n      <Header>Welcome back.</Header>\n      <TextInput\n        label=\"Buyer Phone\"\n        returnKeyType=\"next\"\n        value={buyerPhone.value}\n        onChangeText={(text) => setBuyerPhone({ value: '+' + text.replace(/\\D/g, ''), error: '' })}\n        error={!!buyerPhone.error}\n        errorText={buyerPhone.error}\n        autoCapitalize=\"none\"\n        keyboardType=\"numeric\"\n      />\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n      <Snackbar\n        visible={visibleSnackbar}\n        onDismiss={() => setVisibleSnackbar(false)}\n        duration={4000}\n        action={{\n          label: 'Undo',\n          onPress: () => {\n            setBuyerPhone({ value: '+84', error: '' })\n            setPassword({ value: '', error: '' })\n          },\n        }}\n      >\n        {loginError || 'Please fill in Buyer Phone & Password fields.'}\n      </Snackbar>\n\n      <View style={styles.forgotPassword}>\n        <TouchableOpacity onPress={() => Alert.alert('Not implemented yet')}>\n          <Text style={styles.label}>Forgot your password?</Text>\n        </TouchableOpacity>\n      </View>\n      <Button mode=\"contained\" onPress={handleLogin}>\n        Login\n      </Button>\n      <View style={styles.row}>\n        <Text style={styles.label}>Don’t have an account? </Text>\n        <TouchableOpacity onPress={() => Alert.alert('Not implemented yet')}>\n          <Text style={styles.link}>Sign up</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  label: {\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n});\n\nexport default memo(SignInScreen);","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nclass AuthService {\n  //TOKEN\n  TOKEN_KEY = 'token';\n\n  getCredentials(): Promise<string | null> {\n    return AsyncStorage.getItem(this.TOKEN_KEY);\n  }\n\n  setCredentials(token: string): Promise<void> {\n    return AsyncStorage.setItem(this.TOKEN_KEY, token);\n  }\n\n  removeCredentials(): Promise<void> {\n    return AsyncStorage.removeItem(this.TOKEN_KEY);\n  }\n\n\n  //USER\n  USER_INFO = 'user_info';\n\n  getUserInfo(): Promise<any | null> {\n    return AsyncStorage.getItem(this.USER_INFO).then((data) =>\n    data ? JSON.parse(data) : null\n  );\n  }\n\n  setUserInfo(user: any):Promise<void> {\n    return AsyncStorage.setItem(this.USER_INFO, JSON.stringify(user));\n  }\n\n  removeUserInfo(): Promise<void> {\n    return AsyncStorage.removeItem(this.USER_INFO);\n  }\n\n  static shared = new AuthService();\n}\n\nexport default AuthService;"],"names":["_react","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_reactNative","_jsxRuntime","WeakMap","cacheBabelInterop","cacheNodeInterop","styles","StyleSheet","create","background","flex","width","backgroundColor","container","padding","maxWidth","alignSelf","alignItems","justifyContent","_default","memo","_ref","children","jsx","View","style","KeyboardAvoidingView","behavior","exports","_reactNativePaper","_theme","_excluded","button","marginVertical","text","fontWeight","fontSize","lineHeight","mode","props","_objectWithoutProperties2","Button","assign","theme","colors","surface","labelStyle","header","color","primary","paddingVertical","Text","image","top","height","resizeMode","Image","source","uri","input","error","paddingHorizontal","paddingTop","errorText","jsxs","TextInput","selectionColor","underlineColor","_interopRequireDefault","AuthContext","React","createContext","signIn","buyerPhone","password","signOut","signUp","useContext","DefaultTheme","secondary","email","length","test","name","phoneNumber","replace","_Background","_Logo","_Header","_Button","_TextInput","_utils","_AuthService","_AuthContext","forgotPassword","marginBottom","row","flexDirection","marginTop","label","link","navigation","_ref2","_useState","useState","value","_useState2","_slicedToArray2","setBuyerPhone","_useState3","_useState4","setPassword","_useState5","_useState6","visibleSnackbar","setVisibleSnackbar","_useState7","_useState8","loginError","setLoginError","showSnackbar","useAuth","handleLogin","_asyncToGenerator2","passwordError","passwordValidator","phoneNumberValidator","formData","FormData","append","response","fetch","method","headers","body","status","responseData","json","AuthService","shared","setCredentials","result","account","token","setUserInfo","console","apply","arguments","returnKeyType","onChangeText","autoCapitalize","keyboardType","secureTextEntry","Snackbar","visible","onDismiss","duration","action","onPress","TouchableOpacity","Alert","alert","_class","_asyncStorage","_classCallCheck2","TOKEN_KEY","USER_INFO","_createClass2","AsyncStorage","getItem","this","setItem","removeItem","then","data","JSON","parse","user","stringify"],"sourceRoot":""}