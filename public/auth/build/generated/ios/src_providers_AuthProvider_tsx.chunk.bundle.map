{"version":3,"file":"src_providers_AuthProvider_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/contexts/AuthContext.ts","webpack:///./src/providers/AuthProvider.tsx","webpack:///./src/services/AuthService.ts"],"sourcesContent":["import React from 'react';\n\nconst AuthContext = React.createContext({\n  signIn: (buyerPhone: string, password: string) => {},\n  signOut: () => {},\n  signUp: (buyerPhone: string, password: string) => {},\n});\n\nconst useAuth = () => React.useContext(AuthContext);\n\nexport {useAuth, AuthContext};","import React from 'react';\nimport AuthService from '../services/AuthService';\nimport { AuthContext } from '../contexts/AuthContext';\n\nenum ActionTypes {\n  RESTORE_TOKEN = 'RESTORE_TOKEN',\n  SIGN_IN = 'SIGN_IN',\n  SIGN_OUT = 'SIGN_OUT',\n}\n\ntype Action = {\n  type: ActionTypes;\n  payload?: any;\n};\n\ntype State = {\n  isLoading: boolean;\n  isSignout: boolean;\n  isUser: any;\n};\n\nconst reducer = (prevState: State, action: Action): State => {\n  switch (action.type) {\n    case ActionTypes.RESTORE_TOKEN:\n      return {\n        ...prevState,\n        isSignout: action.payload,\n        isLoading: false,\n      };\n    case ActionTypes.SIGN_IN:\n      return {\n        ...prevState,\n        isSignout: false,\n        isUser: action.payload,\n      };\n    case ActionTypes.SIGN_OUT:\n      return {\n        ...prevState,\n        isSignout: true,\n        isUser: null,\n      };\n    default:\n      return prevState;\n  }\n};\n\nasync function fetchUserInfo(buyerPhone: string, password: string) {\n  try {\n    const formData = new FormData();\n    formData.append('buyerPhone', buyerPhone);\n    formData.append('password', password);\n\n    const response = await fetch('http://149.28.134.133/api/v1/account/login-by-phone', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      body: formData,\n    });\n\n    if (response.status === 200) {\n      const userInfo = await response.json();\n      return userInfo;\n    } else {\n      throw new Error('Failed to fetch user infor')\n    }\n\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst AuthProvider = ({\n  children,\n}: {\n  children: (data: State) => React.ReactNode;\n}) => {\n  const [state, dispatch] = React.useReducer(reducer, {\n    isLoading: false,\n    isSignout: false,\n    isUser: null,\n  });\n\n  const authContext = React.useMemo(\n    () => ({\n      signIn: async (buyerPhone: string, password: string) => {\n        try {\n          const userInfo = await fetchUserInfo(buyerPhone, password);\n          await AuthService.shared.setUserInfo(userInfo);\n          await AuthService.shared.setCredentials('dummy-auth-token');\n          dispatch({ type: ActionTypes.SIGN_IN, payload: userInfo });\n        } catch (e) {\n          // Handle error\n        }\n\n      },\n      signOut: async () => {\n        try {\n          await AuthService.shared.removeUserInfo();\n          await AuthService.shared.removeCredentials();\n        } catch (e) {\n          // Handle error\n        }\n\n        dispatch({ type: ActionTypes.SIGN_OUT });\n      },\n      signUp: async (buyerPhone: string, password: string) => {\n        try {\n          const userInfo = await fetchUserInfo(buyerPhone, password);\n          await AuthService.shared.setUserInfo(userInfo);\n          await AuthService.shared.setCredentials('dummy-auth-token');\n          dispatch({ type: ActionTypes.SIGN_IN, payload: userInfo });\n        } catch (e) {\n          // Handle error\n        }\n\n      },\n    }),\n    [],\n  );\n\n  React.useEffect(() => {\n    const restoreToken = async () => {\n      let userToken;\n      let userInfo;\n\n      try {\n        userToken = await AuthService.shared.getCredentials();\n        userInfo = await AuthService.shared.getUserInfo();\n      } catch (e) {\n        // Handle error\n      }\n\n      dispatch({ type: ActionTypes.RESTORE_TOKEN, payload: !userToken });\n\n      if (userToken && userInfo) {\n        dispatch({ type: ActionTypes.SIGN_IN, payload: userInfo })\n      }\n    };\n\n    restoreToken();\n  }, []);\n\n\n\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      {children(state)}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nclass AuthService {\n  //TOKEN\n  TOKEN_KEY = 'token';\n\n  getCredentials(): Promise<string | null> {\n    return AsyncStorage.getItem(this.TOKEN_KEY);\n  }\n\n  setCredentials(token: string): Promise<void> {\n    return AsyncStorage.setItem(this.TOKEN_KEY, token);\n  }\n\n  removeCredentials(): Promise<void> {\n    return AsyncStorage.removeItem(this.TOKEN_KEY);\n  }\n\n\n  //USER\n  USER_INFO = 'user_info';\n\n  getUserInfo(): Promise<any | null> {\n    return AsyncStorage.getItem(this.USER_INFO).then((data) =>\n    data ? JSON.parse(data) : null\n  );\n  }\n\n  setUserInfo(user: any):Promise<void> {\n    return AsyncStorage.setItem(this.USER_INFO, JSON.stringify(user));\n  }\n\n  removeUserInfo(): Promise<void> {\n    return AsyncStorage.removeItem(this.USER_INFO);\n  }\n\n  static shared = new AuthService();\n}\n\nexport default AuthService;"],"names":["_react","_interopRequireDefault","require","AuthContext","React","createContext","signIn","buyerPhone","password","signOut","signUp","exports","useContext","_AuthService","_AuthContext","_jsxRuntime","ActionTypes","reducer","prevState","action","type","RESTORE_TOKEN","Object","assign","isSignout","payload","isLoading","SIGN_IN","isUser","SIGN_OUT","fetchUserInfo","_x","_x2","_fetchUserInfo","apply","arguments","_asyncToGenerator2","default","formData","FormData","append","response","fetch","method","headers","body","status","json","Error","error","_default","_ref","children","_React$useReducer","useReducer","_React$useReducer2","_slicedToArray2","state","dispatch","authContext","useMemo","_signIn","userInfo","AuthService","shared","setUserInfo","setCredentials","e","_x3","_x4","_signOut","removeUserInfo","removeCredentials","_signUp","_x5","_x6","useEffect","_ref2","restoreToken","userToken","getCredentials","getUserInfo","jsx","Provider","value","_class","_asyncStorage","_classCallCheck2","TOKEN_KEY","USER_INFO","_createClass2","key","AsyncStorage","getItem","this","token","setItem","removeItem","then","data","JSON","parse","user","stringify"],"sourceRoot":""}