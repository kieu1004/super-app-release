{"version":3,"file":"src_screens_UpcomingScreen_tsx.chunk.bundle","mappings":"yMAAAA,EAAAC,EAAA,YACAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAJ,EAAAC,EAAA,QAA6DI,EAAAJ,EAAA,OAEvDK,EAAa,SAAHC,GAAA,IAAKC,EAAID,EAAJC,KAAI,OACvB,EAAAH,EAAAI,MAACN,EAAAO,KAAI,CAACC,KAAK,YAAWC,SAAA,EACpB,EAAAP,EAAAQ,KAACV,EAAAO,KAAKI,MAAK,CACTC,aAAa,cACbC,gBAAgB,aAChBC,MAAUT,EAAKS,MAAK,MAAMT,EAAKU,SAC/BC,SAAaX,EAAKY,KAAI,IAAIZ,EAAKa,KAC/BC,KAAM,SAAAC,GAAK,OAAI,EAAAlB,EAAAQ,KAACV,EAAAqB,OAAOC,KAAIC,OAAAC,OAAA,GAAKJ,EAAK,CAAEK,KAAK,aAAa,KAE3D,EAAAvB,EAAAI,MAACN,EAAAO,KAAKmB,QAAO,CAAAjB,SAAA,EACX,EAAAP,EAAAQ,KAACV,EAAA2B,OAAM,CAACnB,KAAK,OAAOoB,QAAS,WAAO,EAAEnB,SAAC,YAGvC,EAAAP,EAAAQ,KAACV,EAAA2B,OAAM,CAACnB,KAAK,YAAYoB,QAAS,WAAO,EAAEnB,SAAC,oBAIzC,EAGHoB,EAAgB,WAAH,OAAS,EAAA3B,EAAAQ,KAACV,EAAA8B,QAAO,CAACC,MAAOC,EAAOC,SAAY,EAczDD,EAASE,EAAAA,WAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,QAEnBC,iBAAkB,CAChBC,QAAS,IAEXP,QAAS,CACPK,gBAAiB,cACjBG,OAAQ,KAETC,EAxBoB,WACrB,OACE,EAAAxC,EAAAQ,KAACX,EAAA4C,SAAQ,CACPC,KAAMC,EAAAA,QAAiBD,KACvBzC,WAAYA,EACZ2C,uBAAwBjB,EACxBE,MAAOC,EAAOI,UACdW,sBAAuBf,EAAOO,kBAGpC,EAgB6BS,EAAAA,QAAAN,C","sources":["webpack:///./src/screens/UpcomingScreen.tsx"],"sourcesContent":["import React from 'react';\nimport {FlatList, StyleSheet} from 'react-native';\nimport {Avatar, Button, Card, Divider} from 'react-native-paper';\nimport upcomingBookings from '../data/upcomingBookings.json';\n\nconst renderItem = ({item}: any) => (\n  <Card mode=\"contained\">\n    <Card.Title\n      titleVariant=\"titleMedium\"\n      subtitleVariant=\"bodyMedium\"\n      title={`${item.title} â€¢ ${item.provider}`}\n      subtitle={`${item.date} ${item.time}`}\n      left={props => <Avatar.Icon {...props} icon=\"calendar\" />}\n    />\n    <Card.Actions>\n      <Button mode=\"text\" onPress={() => {}}>\n        Cancel\n      </Button>\n      <Button mode=\"contained\" onPress={() => {}}>\n        Reschedule\n      </Button>\n    </Card.Actions>\n  </Card>\n);\n\nconst renderDivider = () => <Divider style={styles.divider} />;\n\nconst UpcomingScreen = () => {\n  return (\n    <FlatList\n      data={upcomingBookings.data}\n      renderItem={renderItem}\n      ItemSeparatorComponent={renderDivider}\n      style={styles.container}\n      contentContainerStyle={styles.contentContainer}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  contentContainer: {\n    padding: 16,\n  },\n  divider: {\n    backgroundColor: 'transparent',\n    height: 8,\n  },\n});\n\nexport default UpcomingScreen;\n"],"names":["_interopRequireDefault","require","_reactNative","_reactNativePaper","_upcomingBookings","_jsxRuntime","renderItem","_ref","item","jsxs","Card","mode","children","jsx","Title","titleVariant","subtitleVariant","title","provider","subtitle","date","time","left","props","Avatar","Icon","Object","assign","icon","Actions","Button","onPress","renderDivider","Divider","style","styles","divider","StyleSheet","create","container","flex","backgroundColor","contentContainer","padding","height","_default","FlatList","data","upcomingBookings","ItemSeparatorComponent","contentContainerStyle","exports"],"sourceRoot":""}